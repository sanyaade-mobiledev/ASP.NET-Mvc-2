Dynamic Data Futures 0.1.02 Changes (2008-07-02)
------------------------------------------------

- Modified ForeignKey_Edit field template to display a [Not Set] entry for required columns
in insert mode. Added a RequiredFieldValidator to ensure that an entry is selected if the
column is required.

- Added Url and EmailAddress field templates.

- Added DynamicHyperLink control. It generates links to Dynamic Data tables for
all actions and works both in data-binding and simple scenarios.

- Modified routes in Global.asax to generate pretty URLs using the new PrettyDynamicDataRoute.

- Changed FilterAttribute.Order property to match the behavior of ColumnOrderAttribute.Order
property. Now each filter has a default Order of 0; negative numbers can be used to push
filters to the fron, while positive numbers can be used to push filters to the back.

Dynamic Data Futures 0.1.01 Changes (2008-06-25)
------------------------------------------------

- Renamed project to Dynamic Data Futures.

- Moved/renamed a number of library files for better logical organization. Classes
are now organized what they generally do instead of how they apply to a particular
sample.

- Updated DbImage.ascx to better handle compound and GUID primary key tables. Also,
page templates will disable AJAX partial rendering when editing an image column to
allow the FileUpload control to work properly.

- Added support for complex where parameters. This can be seen in the pages under
ComplexWhereParameters in the sample app that already have a Where clause for
LinqDataSource but also use the filters to contribute extra components.

- Added automatic support for enumerated type columns. UIHint is no longer needed
to reference Enumeration.ascx.

- Moved a number of extension/utility methods to the DynamicDataFutures class. This
includes localization helpers, metadata helpers, and default value helpers.

- Consolidated IAutoFieldGenerator implementations into a single AdvancedFieldGenerator
class. It now includes functionality enabling column ordering, programatically
excluding a list of columns, and a workaround for issues with attribute localization.

- Refactored common LINQ Expression generation code into the LinqExpressionHelper
class.