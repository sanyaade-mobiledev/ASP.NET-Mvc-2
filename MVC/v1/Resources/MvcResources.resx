<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActionFilter_DuplicateOrder" xml:space="preserve">
    <value>Two filter attributes on '{0}' have the same filter order {1}. If a filter explicitly specifies an order of 0 or greater, no other filter may specify that same order.</value>
  </data>
  <data name="ActionFilter_OrderOutOfRange" xml:space="preserve">
    <value>Order must be greater than or equal to -1.</value>
  </data>
  <data name="Common_NullOrEmpty" xml:space="preserve">
    <value>Value cannot be null or empty.</value>
  </data>
  <data name="Common_PageCannotBeNull" xml:space="preserve">
    <value>Page cannot be null. Please ensure that this operation is being performed in the context of an ASP.NET request.</value>
  </data>
  <data name="ControllerBuilder_ErrorCreatingControllerFactory" xml:space="preserve">
    <value>There was an error creating the IControllerFactory '{0}'. Check that it has a public parameterless constructor.</value>
  </data>
  <data name="ControllerBuilder_FactoryReturnedNull" xml:space="preserve">
    <value>The IControllerFactory '{0}' did not return a controller for a controller named '{1}'.</value>
  </data>
  <data name="ControllerBuilder_MissingIControllerFactory" xml:space="preserve">
    <value>The controller factory type '{0}' must implement the IControllerFactory interface.</value>
  </data>
  <data name="Controller_ActionCannotBeGeneric" xml:space="preserve">
    <value>Cannot call action '{0}' since it is a generic method.</value>
  </data>
  <data name="Controller_CannotConvertParameter" xml:space="preserve">
    <value>Cannot convert parameter '{0}' in action '{1}' with value '{2}' to type '{3}'.</value>
  </data>
  <data name="Controller_MissingParameter" xml:space="preserve">
    <value>A value is required for parameter '{0}' in action '{1}'. The parameter either has no value or its value could not be converted. To make a parameter optional its type should either be a reference type or a Nullable type.</value>
  </data>
  <data name="Controller_MoreThanOneAction" xml:space="preserve">
    <value>More than one action named '{0}' was found on controller '{1}'.</value>
  </data>
  <data name="Controller_ReferenceParametersNotSupported" xml:space="preserve">
    <value>Cannot set value for parameter '{0}' in action '{1}'. Parameters passed by reference are not supported in action methods.</value>
  </data>
  <data name="Controller_UnknownAction" xml:space="preserve">
    <value>A public action method named '{0}' could not be found on the controller.</value>
  </data>
  <data name="DefaultControllerFactory_DuplicateControllers" xml:space="preserve">
    <value>Duplicate controller types found for '{0}'. To disambiguate the controller set the controller's namespace in the route.</value>
  </data>
  <data name="DefaultControllerFactory_ErrorCreatingController" xml:space="preserve">
    <value>An error occurred while creating a controller of type '{0}'. If the controller doesn't have a controller factory, ensure that it has a parameterless public constructor.</value>
  </data>
  <data name="DefaultControllerFactory_MissingIController" xml:space="preserve">
    <value>The controller type '{0}' must implement the IController interface.</value>
  </data>
  <data name="DefaultControllerFactory_NoControllerFound" xml:space="preserve">
    <value>The controller for path '{0}' could not be found or it does not implement the IController interface.</value>
  </data>
  <data name="Helper_DictionaryAlreadyContainsKey" xml:space="preserve">
    <value>The provided object or RouteValueDictionary already contains a definition for '{0}'.</value>
  </data>
  <data name="MvcHandler_NoRequestContext" xml:space="preserve">
    <value>The MvcHandler requires that a valid RequestContext be set.</value>
  </data>
  <data name="ViewLocator_LocationsRequired" xml:space="preserve">
    <value>The parameter must be set to an array of location format strings, such as "~/Views/{1}/{0}.aspx".</value>
  </data>
  <data name="ViewLocator_MasterNotFound" xml:space="preserve">
    <value>The master '{0}' could not be located at these paths: {1}</value>
  </data>
  <data name="ViewLocator_ViewNotFound" xml:space="preserve">
    <value>The view '{0}' could not be located at these paths: {1}</value>
  </data>
  <data name="ViewMasterPage_RequiresViewPage" xml:space="preserve">
    <value>A ViewMasterPage can only be used with content pages that derive from ViewPage or ViewPage&lt;TViewData&gt;.</value>
  </data>
  <data name="ViewMasterPage_RequiresViewPageTViewData" xml:space="preserve">
    <value>A ViewMasterPage&lt;TViewData&gt; can only be used with content pages that derive from ViewPage&lt;TViewData&gt;.</value>
  </data>
  <data name="ViewPageTViewData_WrongViewDataType" xml:space="preserve">
    <value>The view data passed into the page is of type '{0}' but this page requires view data of type '{1}'.</value>
  </data>
  <data name="ViewUserControl_RequiresViewDataProvider" xml:space="preserve">
    <value>The ViewUserControl '{0}' cannot find an IViewDataContainer. The ViewUserControl must be inside a ViewPage, ViewMasterPage, or another ViewUserControl.</value>
  </data>
  <data name="ViewUserControl_RequiresViewPage" xml:space="preserve">
    <value>A ViewUserControl can only be used inside pages that derive from ViewPage or ViewPage&lt;TViewData&gt;.</value>
  </data>
  <data name="ViewUserControl_WrongTViewDataType" xml:space="preserve">
    <value>The view data for ViewUserControl '{0}' could not be found or is not of the type '{1}'.</value>
  </data>
  <data name="WebFormViewEngine_MasterNotFound" xml:space="preserve">
    <value>The master '{0}' could not be found.</value>
  </data>
  <data name="WebFormViewEngine_UserControlCannotHaveMaster" xml:space="preserve">
    <value>A master name cannot be specified when the view is a ViewUserControl.</value>
  </data>
  <data name="WebFormViewEngine_ViewCouldNotBeCreated" xml:space="preserve">
    <value>The view found at '{0}' could not be created.</value>
  </data>
  <data name="WebFormViewEngine_ViewNotFound" xml:space="preserve">
    <value>The view '{0}' could not be found.</value>
  </data>
  <data name="WebFormViewEngine_WrongViewBase" xml:space="preserve">
    <value>The view at '{0}' must derive from ViewPage, ViewPage&lt;TViewData&gt;, ViewUserControl, or ViewUserControl&lt;TViewData&gt;.</value>
  </data>
</root>